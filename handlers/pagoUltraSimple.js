const { sendMessage } = require('../utils/sendMessage');
const { marcarPagado } = require('../utils/marcarPagado');
const { generarPdfDesdeApi2Pdf } = require('../utils/pdf');
const { sendPdf } = require('../utils/pdf');
const { esCedula } = require('../utils/validaciones');
const { extraerUserId, logInfo, logError } = require('../utils/shared');
const { config } = require('../config/environment');

/**
 * S√öPER ULTRA SIMPLE:
 * - Imagen -> Pedir documento 
 * - Texto que sea c√©dula -> Procesar pago
 * SIN NIVELES, SIN BD, SIN COMPLICACIONES
 */

/**
 * Procesar imagen - Solo pedir documento
 */
async function procesarImagen(message, res) {
    const from = message.from;
    const userId = extraerUserId(from);
    
    try {
        logInfo('pagoUltraSimple', 'Imagen recibida', { userId });
        
        // SIMPLE: Solo pedir documento
        const mensaje = `üì∏ *Imagen recibida*\n\nEscribe tu *n√∫mero de documento* para procesar tu pago:\n\nEjemplo: 1234567890`;
        
        await sendMessage(from, mensaje);
        
        return res.json({ success: true });
        
    } catch (error) {
        logError('pagoUltraSimple', 'Error procesando imagen', { userId, error });
        return res.status(500).json({ success: false, error: error.message });
    }
}

/**
 * Procesar texto - Si es c√©dula, procesar pago
 */
async function procesarTexto(message, res) {
    const from = message.from;
    const texto = message.text.body.trim();
    const userId = extraerUserId(from);
    
    try {
        logInfo('pagoUltraSimple', 'Texto recibido', { userId, texto });
        
        // Si es una c√©dula, procesar pago inmediatamente
        if (esCedula(texto)) {
            logInfo('pagoUltraSimple', 'Procesando c√©dula como pago', { userId, cedula: texto });
            
            await sendMessage(from, `‚è≥ Procesando pago para documento ${texto}...`);
            
            // Marcar como pagado
            const resultadoPago = await marcarPagado(texto);
            
            if (!resultadoPago.success) {
                await sendMessage(from, `‚ùå No encontr√© un registro con el documento ${texto}.\n\nVerifica que el n√∫mero est√© correcto y que hayas realizado tu examen m√©dico.`);
                return res.json({ success: false });
            }
            
            // Generar y enviar PDF
            try {
                const pdfUrl = await generarPdfDesdeApi2Pdf(texto);
                
                if (pdfUrl) {
                    await sendPdf(from, pdfUrl, texto);
                    await sendMessage(from, `üéâ *¬°Proceso completado!*\n\n‚úÖ Pago registrado\nüìÑ Certificado enviado\n‚ú® Sin marca de agua`);
                } else {
                    await sendMessage(from, `‚úÖ Pago registrado\n\n‚ö†Ô∏è Error generando PDF. Un asesor te lo enviar√°.`);
                }
            } catch (pdfError) {
                logError('pagoUltraSimple', 'Error generando PDF', { userId, cedula: texto, error: pdfError });
                await sendMessage(from, `‚úÖ Pago registrado\n\n‚ö†Ô∏è Error con certificado. Un asesor te contactar√°.`);
            }
            
            return res.json({ success: true });
        }
        
        // Si no es c√©dula, ignorar
        return res.json({ success: true, mensaje: "Texto ignorado - no es c√©dula" });
        
    } catch (error) {
        logError('pagoUltraSimple', 'Error procesando texto', { userId, error });
        return res.status(500).json({ success: false, error: error.message });
    }
}

module.exports = {
    procesarImagen,
    procesarTexto
};